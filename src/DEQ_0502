
if (!requireNamespace("BiocManager", quietly = TRUE))
  install.packages("BiocManager")
install.packages(c("Rcpp", "readr", "curl", "data.table"))
library(readr)
library(curl)
library(data.table)

BiocManager::install("DESeq2")

# import count matrix and column data
my_data <- read.delim(file.choose())
cts = as.matrix(as.data.frame(lapply(my_data, as.numeric)))
rownames(cts) <- my_data[,1]

col <- read.delim(file.choose())
col <- subset (col, select = -c(1:4))
coldata <- col [, -1]
rownames(coldata) <- col[,1]

# making sure col names of cts match row name of coldata
all(rownames(coldata) %in% colnames(cts))
all(rownames(coldata) == colnames(cts))
cts <- cts[, rownames(coldata)]
all(rownames(coldata) == colnames(cts))

# http://127.0.0.1:11014/library/DESeq2/doc/DESeq2.html#countmat
library("DESeq2")
dds <- DESeqDataSetFromMatrix(countData = round(cts),
                              colData = coldata,
                              design = ~ pathology)
# can customize the design function
dds

# pre-filtering (eliminate those with fewer reads)
keep <- rowSums(counts(dds)) >= 10
dds <- dds[keep,]

# DEQ analysis! 
dds <- DESeq(dds)
res <- results(dds, contrast=c("pathology","DKD","normal"))
resultsNames(dds)

# rank the rows using r-values 
resOrdered <- res[order(res$pvalue),]
sum(res05$padj < 0.05, na.rm=TRUE)

# log2 fold changes attributable to a given variable over the mean of normalized counts 
plotMA(res, ylim=c(-2,2))
